name: Weekly Build

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0

jobs:
  build:
    name: Pull and Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: git tag
        uses: actions/github-script@v2
        id: tag
        with:
          script: |
            const now = new Date()
            return `${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}`
          result-encoding: string

      - name: Push Tag
        run: |
          git config --global user.name 'mili-tan'
          git config --global user.email 'mili-tan@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git tag ${{steps.tag.outputs.result}}
          git push origin ${{steps.tag.outputs.result}}
      
      - name: Download file
        env: 
          LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
        run: |
          mkdir dist
          wget -O ./GeoLite2-City.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${LICENSE_KEY}&suffix=tar.gz"
          tar zxvf ./GeoLite2-City.tar.gz -C .
          mv ./GeoLite2-City_*/GeoLite2-City.mmdb ./dist/GeoLite2-City.mmdb
          wget -O ./GeoLite2-ASN.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${LICENSE_KEY}&suffix=tar.gz"
          tar zxvf ./GeoLite2-ASN.tar.gz -C .
          mv ./GeoLite2-ASN_*/GeoLite2-ASN.mmdb ./dist/GeoLite2-ASN.mmdb
          wget -O ./GeoLite2-Country.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${LICENSE_KEY}&suffix=tar.gz"
          tar zxvf ./GeoLite2-Country.tar.gz -C .
          mv ./GeoLite2-Country_*/GeoLite2-Country.mmdb ./dist/GeoLite2-Country.mmdb

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./dist/GeoLite2-City.mmdb
            ./dist/GeoLite2-ASN.mmdb
            ./dist/GeoLite2-Country.mmdb
          tag_name: ${{steps.tag.outputs.result}}
          
      - name: Upload to release branch
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: release
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    
      - name: Delete Older
        uses: dev-drprasad/delete-older-releases@v0.1.0
        with:
          keep_latest: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

